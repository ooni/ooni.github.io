<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Resilience on OONI: Open Observatory of Network Interference</title><link>https://ooni.github.io/tags/resilience/</link><description>Recent content in Resilience on OONI: Open Observatory of Network Interference</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 27 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ooni.github.io/tags/resilience/index.xml" rel="self" type="application/rss+xml"/><item><title>Making the OONI Probe Android app more resilient</title><link>https://ooni.github.io/post/making-ooni-probe-android-more-resilient/</link><pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate><guid>https://ooni.github.io/post/making-ooni-probe-android-more-resilient/</guid><description>&lt;p>We recently made &lt;a href="https://play.google.com/store/apps/details?id=org.openobservatory.ooniprobe">OONI Probe Android&lt;/a>
more robust against accidental or deliberate blocking of our backend
services. Specifically, we implemented support for specifying a proxy
that speaks with OONI’s backend services. We also improved the build
process to influence the TLS Client Hello fingerprint, which helps with
avoiding accidental blocking.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://ooni.github.io/post/making-ooni-probe-android-more-resilient/#adding-support-for-a-proxy">Adding support for a proxy&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ooni.github.io/post/making-ooni-probe-android-more-resilient/#changing-our-android-tls-fingerprint">Changing our Android TLS fingerprint&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ooni.github.io/post/making-ooni-probe-android-more-resilient/#future-improvements">Future improvements&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="adding-support-for-a-proxy" class="group flex flex-row flex-wrap items-center">
 &lt;a class="md:invisible group-hover:visible -ms-[24px] w-[24px]" href="#adding-support-for-a-proxy">
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="14px" height="14px" viewBox="0 0 24 24" version="1.1">
 &lt;g>
 &lt;path d="M 22.394531 1.605469 C 20.25 -0.535156 16.761719 -0.535156 14.621094 1.605469 L 11.230469 4.996094 L 12.796875 6.5625 L 16.1875 3.171875 C 17.464844 1.890625 19.546875 1.894531 20.828125 3.171875 C 22.109375 4.453125 22.105469 6.535156 20.828125 7.816406 L 15.738281 12.902344 C 15.121094 13.523438 14.296875 13.863281 13.417969 13.863281 C 12.542969 13.863281 11.71875 13.523438 11.097656 12.902344 L 9.53125 14.46875 C 10.570312 15.503906 11.949219 16.078125 13.417969 16.078125 C 14.886719 16.078125 16.265625 15.503906 17.304688 14.46875 L 22.394531 9.378906 C 24.535156 7.234375 24.535156 3.75 22.394531 1.605469 Z M 22.394531 1.605469 "/>
 &lt;path d="M 7.8125 20.828125 C 6.535156 22.109375 4.453125 22.109375 3.171875 20.828125 C 1.890625 19.546875 1.890625 17.464844 3.171875 16.183594 L 8.261719 11.097656 C 9.539062 9.816406 11.621094 9.816406 12.902344 11.097656 L 14.46875 9.53125 C 12.324219 7.390625 8.835938 7.390625 6.695312 9.53125 L 1.605469 14.621094 C -0.535156 16.761719 -0.535156 20.25 1.605469 22.394531 C 2.679688 23.464844 4.085938 24 5.492188 24 C 6.902344 24 8.308594 23.464844 9.378906 22.394531 L 12.769531 19 L 11.207031 17.4375 Z M 7.8125 20.828125 "/>
 &lt;/g>
 &lt;/svg>
 &lt;/a>
 Adding support for a proxy
&lt;/h1>
&lt;p>Since late 2020, community members have been reporting specific OONI
Probe Android failures. The symptom is that all tests fail with the “all
available probe services failed” error. This issue has been publicly
documented, for example, in
&lt;a href="https://github.com/ooni/probe/issues/1324">ooni/probe#1324&lt;/a>. The
following screenshot shows what a user would see under this specific
error condition.&lt;/p></description></item></channel></rss>